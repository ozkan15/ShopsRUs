// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopsRUs.Infrastructure;

#nullable disable

namespace ShopsRUs.Migrations
{
    [DbContext(typeof(ShopsRUsContext))]
    partial class ShopsRUsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DiscountInvoice", b =>
                {
                    b.Property<int>("DiscountsId")
                        .HasColumnType("int");

                    b.Property<int>("InvoicesId")
                        .HasColumnType("int");

                    b.HasKey("DiscountsId", "InvoicesId");

                    b.HasIndex("InvoicesId");

                    b.ToTable("DiscountInvoice");
                });

            modelBuilder.Entity("ShopsRUs.Model.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DiscountType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Discounts");

                    b.HasDiscriminator<int>("DiscountType");
                });

            modelBuilder.Entity("ShopsRUs.Model.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("AmountNet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmoutTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("ShopsRUs.Model.InvoiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ProductId");

                    b.ToTable("InvoiceDetails");
                });

            modelBuilder.Entity("ShopsRUs.Model.PercentageDiscountExcludedProductCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("PercentageDiscountExcludedProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscountId = 1,
                            ProductCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            DiscountId = 2,
                            ProductCategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            DiscountId = 3,
                            ProductCategoryId = 1
                        });
                });

            modelBuilder.Entity("ShopsRUs.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 3,
                            ItemName = "Apple AirPods (2nd Generation)",
                            Price = 99.99m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            ItemName = "HP DeskJet 2755e",
                            Price = 112.50m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            ItemName = "Seagate Portable 2TB External Hard Drive",
                            Price = 61.99m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            ItemName = "Acer Aspire 5",
                            Price = 391.00m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            ItemName = "Lenovo Flex 5 Laptop",
                            Price = 671.00m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            ItemName = "Acer Nitro 5",
                            Price = 669.99m
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
                            ItemName = "Pokémon Legends",
                            Price = 53.85m
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            ItemName = "Grand Theft Auto V",
                            Price = 34.99m
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            ItemName = "Oreo Cookies",
                            Price = 5.98m
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 1,
                            ItemName = "Bread",
                            Price = 1.10m
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 1,
                            ItemName = "Doritos 3D Crunch",
                            Price = 3.48m
                        });
                });

            modelBuilder.Entity("ShopsRUs.Model.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Groceries"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Computer"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Video Games"
                        });
                });

            modelBuilder.Entity("ShopsRUs.Model.ShopUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ShopUser");

                    b.HasDiscriminator<int>("UserType");
                });

            modelBuilder.Entity("ShopsRUs.Model.Affiliate", b =>
                {
                    b.HasBaseType("ShopsRUs.Model.ShopUser");

                    b.Property<string>("AffiliateName")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue(2);

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Address = "Avda. de la Constitución 2222",
                            Name = "Ana",
                            RegistrationDate = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Surname = "Trujillo",
                            UserType = 2,
                            AffiliateName = "Amazon"
                        });
                });

            modelBuilder.Entity("ShopsRUs.Model.AmountDiscount", b =>
                {
                    b.HasBaseType("ShopsRUs.Model.Discount");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscountableAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue(2);

                    b.HasData(
                        new
                        {
                            Id = 4,
                            DiscountType = 2,
                            Name = "5DollarDiscount",
                            DiscountAmount = 5m,
                            DiscountableAmount = 100m
                        });
                });

            modelBuilder.Entity("ShopsRUs.Model.Customer", b =>
                {
                    b.HasBaseType("ShopsRUs.Model.ShopUser");

                    b.HasDiscriminator().HasValue(1);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Obere Str. 57",
                            Name = "Maria",
                            RegistrationDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Surname = "Anders",
                            UserType = 1
                        },
                        new
                        {
                            Id = 4,
                            Address = "120 Hanover Sq.",
                            Name = "Thomas",
                            RegistrationDate = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Surname = "Hardy",
                            UserType = 1
                        });
                });

            modelBuilder.Entity("ShopsRUs.Model.Employee", b =>
                {
                    b.HasBaseType("ShopsRUs.Model.ShopUser");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue(3);

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Address = "Mataderos  2312",
                            Name = "Antonio",
                            RegistrationDate = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Surname = "Moreno",
                            UserType = 3,
                            Title = "Sales Representative"
                        });
                });

            modelBuilder.Entity("ShopsRUs.Model.PercentageDiscount", b =>
                {
                    b.HasBaseType("ShopsRUs.Model.Discount");

                    b.Property<double>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue(1);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscountType = 1,
                            Name = "CustomerDiscount",
                            DiscountPercentage = 5.0,
                            UserType = 1
                        },
                        new
                        {
                            Id = 2,
                            DiscountType = 1,
                            Name = "AffiliateDiscount",
                            DiscountPercentage = 10.0,
                            UserType = 2
                        },
                        new
                        {
                            Id = 3,
                            DiscountType = 1,
                            Name = "EmployeeDiscount",
                            DiscountPercentage = 30.0,
                            UserType = 3
                        });
                });

            modelBuilder.Entity("DiscountInvoice", b =>
                {
                    b.HasOne("ShopsRUs.Model.Discount", null)
                        .WithMany()
                        .HasForeignKey("DiscountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopsRUs.Model.Invoice", null)
                        .WithMany()
                        .HasForeignKey("InvoicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShopsRUs.Model.Invoice", b =>
                {
                    b.HasOne("ShopsRUs.Model.ShopUser", "User")
                        .WithMany("Invoices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShopsRUs.Model.InvoiceDetail", b =>
                {
                    b.HasOne("ShopsRUs.Model.Invoice", "Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopsRUs.Model.Product", "Product")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShopsRUs.Model.PercentageDiscountExcludedProductCategories", b =>
                {
                    b.HasOne("ShopsRUs.Model.PercentageDiscount", "PercentageDiscount")
                        .WithMany("ExcludedProductCategories")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopsRUs.Model.ProductCategory", "ProductCategory")
                        .WithMany("ExcludedDiscounts")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PercentageDiscount");

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("ShopsRUs.Model.Product", b =>
                {
                    b.HasOne("ShopsRUs.Model.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("ShopsRUs.Model.Invoice", b =>
                {
                    b.Navigation("InvoiceDetails");
                });

            modelBuilder.Entity("ShopsRUs.Model.Product", b =>
                {
                    b.Navigation("InvoiceDetails");
                });

            modelBuilder.Entity("ShopsRUs.Model.ProductCategory", b =>
                {
                    b.Navigation("ExcludedDiscounts");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("ShopsRUs.Model.ShopUser", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("ShopsRUs.Model.PercentageDiscount", b =>
                {
                    b.Navigation("ExcludedProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
